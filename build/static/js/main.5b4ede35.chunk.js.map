{"version":3,"sources":["ducks/login/types.js","ducks/login/actions.js","utils/constants.js","components/login/login.jsx","components/pages/login/LoginPage.jsx","components/register/Register.jsx","components/pages/register/RegisterPage.jsx","ducks/user/types.js","ducks/user/actions.js","components/edit/Edit.jsx","components/pages/edit/EditPage.jsx","components/pages/about/AboutPage.jsx","components/App.jsx","ducks/login/reducer.js","ducks/user/reducer.js","utils/api.js","ducks/login/sagas.js","ducks/user/sagas.js","ducks/store/root-saga.js","ducks/store/index.js","ducks/store/root-reducer.js","index.js"],"names":["values","actions","res","type","types","routes","createRoute","id","Text","Typography","Login","props","dispatch","useDispatch","formik","useFormik","initialValues","email","password","onSubmit","a","Promise","loginActions","console","log","className","errors","common","gutter","justify","span","name","size","placeholder","onChange","handleChange","value","Password","to","onClick","handleSubmit","loading","isSubmitting","Title","LoginPage","level","Register","RegisterPage","userId","payload","Link","Edit","useParams","user","useSelector","state","React","useEffect","userActions","firstname","lastname","patronymic","avatarURL","phone","vk","github","content","setValues","JSON","stringify","aboutLink","window","location","origin","TextArea","rows","EditPage","style","padding","AboutPage","marginTop","src","href","marginBottom","dangerouslySetInnerHTML","__html","App","path","component","render","initialState","action","api","axios","create","baseURL","process","loginSaga","registerSaga","logoutSaga","req","post","delay","call","response","token","data","defaults","headers","put","push","setErrors","message","localStorage","setItem","all","takeLatest","getUserSaga","updateUserSaga","alert","loginSagas","userSagas","history","createBrowserHistory","browserRouterMiddleware","routerMiddleware","sagaMiddleware","createSagaMiddleware","middleware","store","createStore","combineReducers","login","loginReducer","userReducer","form","router","connectRouter","composeWithDevTools","applyMiddleware","run","rootSaga","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5b4ede35.chunk.js","sourcesContent":["export default {\n    LOGIN_REQUEST: '@@login/LOGIN_REQUEST',\n    REGISTER_REQUEST: '@@login/REGISTER_REQUEST',\n    LOGOUT_REQUEST: '@@login/LOGOUT_REQUEST',\n};","import types from './types';\n\nexport default {\n    loginRequest(values, actions, res) {\n        return {\n            type: types.LOGIN_REQUEST,\n            values, actions, res\n        };\n    },\n\n    registerRequest(values, actions, res) {\n        return {\n            type: types.REGISTER_REQUEST,\n            values, actions, res\n        };\n    },\n\n    logoutRequest() {\n        return {\n            type: types.LOGOUT_REQUEST\n        };\n    },\n}","export const routes = {\n    SIGNIN: '/sign-in',\n    SIGNUP: '/sign-up',\n    EDIT: '/edit/:id',\n    ABOUT: '/about/:id',\n};\n\nexport const createRoute = {\n    EDIT: id =>`/edit/${id}`,\n    ABOUT: id =>`/about/${id}`,\n};","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useFormik } from \"formik\";\nimport { Input, Button, Space, Row, Col, Typography } from \"antd\";\nimport { Link } from 'react-router-dom';\nimport loginActions from \"../../ducks/login/actions\";\nimport \"./login.scss\";\nimport {routes} from \"../../utils/constants\";\n\nconst { Text } = Typography;\n\nfunction Login(props) {\n    const dispatch = useDispatch();\n    const formik = useFormik({\n        initialValues: {\n            email: '',\n            password: '',\n        },\n        onSubmit: async (values, actions) => {\n            await new Promise((res) => {\n                dispatch(loginActions.loginRequest(values, actions, res));\n            });\n        }\n    });\n    console.log(formik)\n\n    return (\n        <div className=\"login__main-container\">\n            { formik.errors.common && (\n                <Text type=\"danger\">{formik.errors.common}</Text>\n            )}\n            <Row gutter={[0, 20]} justify=\"end\">\n                <Col span={24}>\n                    <Input name={\"email\"} size=\"large\" placeholder=\"email\"\n                           onChange={formik.handleChange}\n                           value={formik.values.email}\n                    />\n                </Col>\n            </Row>\n            <Row gutter={[0, 20]} justify=\"end\">\n                <Col span={24}>\n                    <Input.Password name={\"password\"} size=\"large\" placeholder=\"password\"\n                        onChange={formik.handleChange}\n                        value={formik.values.password}\n                    />\n                </Col>\n            </Row>\n            <Row gutter={[0, 20]} justify=\"end\">\n                <Col>\n                    <Space size=\"middle\">\n                        <Link to={routes.SIGNUP}>\n                            <Button type=\"primary\" size=\"large\">Sign up</Button>\n                        </Link>\n                        <Button type=\"submit\"\n                                onClick={formik.handleSubmit}\n                                size=\"large\"\n                                loading={formik.isSubmitting}\n                        >Sign in</Button>\n                    </Space>\n                </Col>\n            </Row>\n        </div>\n    );\n}\n\nexport { Login };\n","import React from 'react';\nimport { Login } from '../../login/login';\nimport \"./LoginPage.scss\";\nimport {Typography} from \"antd\";\n\nconst { Title } = Typography;\n\nfunction LoginPage() {\n    return (\n        <div className=\"login-page__main-container\">\n            <Title level={2}>Sign-in</Title>\n            <Login />\n        </div>\n    );\n}\n\nexport default LoginPage;","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useFormik } from \"formik\";\nimport { Input, Button, Space, Row, Col, Typography } from \"antd\";\nimport { Link } from 'react-router-dom';\nimport loginActions from \"../../ducks/login/actions\";\nimport {routes} from \"../../utils/constants\";\n\nconst { Text } = Typography;\n\nfunction Register(props) {\n    const dispatch = useDispatch();\n    const formik = useFormik({\n        initialValues: {\n            email: '',\n            password: '',\n        },\n        onSubmit: async (values, actions) => {\n            await new Promise((res) => {\n                dispatch(loginActions.registerRequest(values, actions, res));\n            });\n        }\n    });\n    console.log(formik)\n\n    return (\n        <div className=\"login__main-container\">\n            { formik.errors.common && (\n                <Text type=\"danger\">{formik.errors.common}</Text>\n            )}\n            <Row gutter={[0, 20]} justify=\"end\">\n                <Col span={24}>\n                    <Input name={\"email\"} size=\"large\" placeholder=\"email\"\n                           onChange={formik.handleChange}\n                           value={formik.values.email}\n                    />\n                </Col>\n            </Row>\n            <Row gutter={[0, 20]} justify=\"end\">\n                <Col span={24}>\n                    <Input.Password name={\"password\"} size=\"large\" placeholder=\"password\"\n                                    onChange={formik.handleChange}\n                                    value={formik.values.password}\n                    />\n                </Col>\n            </Row>\n            <Row gutter={[0, 20]} justify=\"end\">\n                <Col>\n                    <Space size=\"middle\">\n                        <Link to={routes.SIGNIN}>\n                            <Button type=\"primary\" size=\"large\">Sign in</Button>\n                        </Link>\n                        <Button type=\"submit\"\n                                onClick={formik.handleSubmit}\n                                size=\"large\"\n                                loading={formik.isSubmitting}\n                        >Sign up</Button>\n                    </Space>\n                </Col>\n            </Row>\n        </div>\n    );\n}\n\nexport { Register };\n","import React from 'react';\nimport { Register } from \"../../register/Register\";\nimport { Typography } from \"antd\";\nimport \"./RegisterPage.scss\";\n\nconst { Title } = Typography;\n\nfunction RegisterPage() {\n    return (\n        <div className=\"register-page__main-container\">\n            <Title level={2}>Sign-up</Title>\n            <Register />\n        </div>\n    );\n}\n\nexport default RegisterPage;","export default {\n    GET_USER_REQUEST: '@@user/LOGIN_REQUEST',\n    GET_USER_SUCCESS: '@@user/GET_USER_SUCCESS',\n    UPDATE_USER_REQUEST: '@@user/REGISTER_REQUEST',\n};","import types from './types';\n\nexport default {\n    getUserRequest(userId) {\n        return {\n            type: types.GET_USER_REQUEST,\n            userId\n        };\n    },\n\n    getUserSuccess(payload) {\n        return {\n            type: types.GET_USER_SUCCESS,\n            payload\n        };\n    },\n\n    updateUserRequest(values, actions, res) {\n        return {\n            type: types.UPDATE_USER_REQUEST,\n            values, actions, res\n        };\n    },\n}","import React from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport { useParams, Link as RouterLink } from 'react-router-dom';\nimport { useFormik } from \"formik\";\nimport { Input, Button, Space, Row, Col, Typography } from \"antd\";\nimport userActions from \"../../ducks/user/actions\";\nimport loginActions from \"../../ducks/login/actions\";\nimport { createRoute } from \"../../utils/constants\";\n\nconst { Text, Title, Link } = Typography;\n\nfunction Edit(props) {\n    const dispatch = useDispatch();\n    const { id } = useParams();\n    const user = useSelector((state) => (state.user.user));\n    React.useEffect(() => {\n      dispatch(userActions.getUserRequest(id));\n    }, []);\n\n    const onLogout = () => (dispatch(loginActions.logoutRequest()))\n\n\n    const formik = useFormik({\n        initialValues: {\n            firstname: \"\",\n            lastname: \"\",\n            patronymic: \"\",\n            avatarURL: \"\",\n            email: \"\",\n            phone: \"\",\n            vk: \"\",\n            github: \"\",\n            content: \"\",\n        },\n        onSubmit: async (values, actions) => {\n            await new Promise((res) => {\n                dispatch(userActions.updateUserRequest(values, actions, res));\n            });\n        }\n    });\n\n    React.useEffect(() => {\n        formik.setValues(user);\n    }, [JSON.stringify(user)]);\n\n    const aboutLink = `${window.location.origin}${createRoute.ABOUT(id)}`\n\n    return (\n        <div>\n            <Row gutter={[0, 20]} justify=\"end\">\n                <Link onClick={onLogout}>Выход</Link>\n            </Row>\n            <Title level={3}>ссылка профиля</Title>\n            <RouterLink to={createRoute.ABOUT(id)}>\n                <Link>{aboutLink}</Link>\n            </RouterLink>\n            <Title>Редакитрование информации</Title>\n\n            <Title level={3}>Обо мне</Title>\n            <Row gutter={[0, 20]} justify=\"end\">\n                <Col span={24}>\n                    <Text>Фамилия</Text>\n                    <Input name={\"lastname\"} size=\"large\"\n                       onChange={formik.handleChange}\n                       value={formik.values.lastname}\n                    />\n                </Col>\n            </Row>\n            <Row gutter={[0, 20]} justify=\"end\">\n                <Col span={24}>\n                    <Text>Имя</Text>\n                    <Input name={\"firstname\"} size=\"large\"\n                        onChange={formik.handleChange}\n                        value={formik.values.firstname}\n                    />\n                </Col>\n            </Row>\n            <Row gutter={[0, 20]} justify=\"end\">\n                <Col span={24}>\n                    <Text>Отчество</Text>\n                    <Input name={\"patronymic\"} size=\"large\"\n                           onChange={formik.handleChange}\n                           value={formik.values.patronymic}\n                    />\n                </Col>\n            </Row>\n            <Row gutter={[0, 20]} justify=\"end\">\n                <Col span={24}>\n                    <Text>Ссылка на фото</Text>\n                    <Input name={\"avatarURL\"} size=\"large\"\n                           onChange={formik.handleChange}\n                           value={formik.values.avatarURL}\n                    />\n                </Col>\n            </Row>\n\n            <Title level={3}>Контакты</Title>\n            <Row gutter={[0, 20]} justify=\"end\">\n                <Col span={24}>\n                    <Text>Почта</Text>\n                    <Input name={\"email\"} size=\"large\"\n                           onChange={formik.handleChange}\n                           value={formik.values.email}\n                    />\n                </Col>\n            </Row>\n            <Row gutter={[0, 20]} justify=\"end\">\n                <Col span={24}>\n                    <Text>Телефон</Text>\n                    <Input name={\"phone\"} size=\"large\"\n                           onChange={formik.handleChange}\n                           value={formik.values.phone}\n                    />\n                </Col>\n            </Row>\n            <Row gutter={[0, 20]} justify=\"end\">\n                <Col span={24}>\n                    <Text>Вк</Text>\n                    <Input name={\"vk\"} size=\"large\"\n                           onChange={formik.handleChange}\n                           value={formik.values.vk}\n                    />\n                </Col>\n            </Row>\n            <Row gutter={[0, 20]} justify=\"end\">\n                <Col span={24}>\n                    <Text>GitHub</Text>\n                    <Input name={\"github\"} size=\"large\"\n                           onChange={formik.handleChange}\n                           value={formik.values.github}\n                    />\n                </Col>\n            </Row>\n\n            <Title level={3}>Контент</Title>\n            <Row gutter={[0, 20]} justify=\"end\">\n                <Col span={24}>\n                    <Text>Контент в формате html</Text>\n                    <Input.TextArea name={\"content\"}\n                           rows={25}\n                           onChange={formik.handleChange}\n                           value={formik.values.content}\n                    />\n                </Col>\n            </Row>\n\n            <Row gutter={[0, 20]} justify=\"end\">\n                <Col>\n                    <Space size=\"middle\">\n                        <Button\n                            type=\"primary\"\n                            onClick={formik.handleSubmit}\n                            size=\"large\"\n                            loading={formik.isSubmitting}\n                        >Save</Button>\n                    </Space>\n                </Col>\n            </Row>\n        </div>\n    );\n}\n\nexport { Edit };\n","import React from 'react';\nimport { Edit } from \"../../edit/Edit\";\n\nfunction EditPage() {\n    return (\n        <div style={{\n            padding: \"50px 100px\"\n        }}>\n            <Edit/>\n        </div>\n    );\n}\n\nexport default EditPage;","import React from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport { useParams, Link as RouteLink } from \"react-router-dom\";\nimport userActions from \"../../../ducks/user/actions\";\nimport { Space, Row, Col, Typography } from \"antd\";\nimport \"./AboutPage.scss\";\nconst { Text, Title, Link } = Typography;\n\nfunction AboutPage() {\n    const dispatch = useDispatch();\n    const { id } = useParams();\n    const user = useSelector((state) => (state.user.user));\n\n    React.useEffect(() => {\n        dispatch(userActions.getUserRequest(id));\n    }, []);\n\n    return (\n        <div style={{\n            marginTop: \"80px\"\n        }}>\n            <Row justify={'center'}>\n                <Col span={12} justify={'center'}>\n                    <Row justify={'center'} className={\"mb-30\"}>\n                        <img src={user.avatarURL} className={\"about-img\"}/>\n                    </Row>\n                    <Row justify={\"center\"} className={\"mb-30\"}>\n                        <Title level={4}>{user.lastname} {user.firstname} {user.patronymic}</Title>\n                    </Row>\n                    <Row className={\"mb-30\"}>\n                        <Col span={24}>\n                            <Title level={4}>Contacts:</Title>\n                            <div className={\"mb-5\"}>\n                                <Text className={\"contact-type\"}>Email:</Text>\n                                <Text>{user.email}</Text>\n                            </div>\n                            <div className={\"mb-5\"}>\n                                <Text className={\"contact-type\"}>Phone:</Text>\n                                <Text>{user.phone}</Text>\n                            </div>\n                            <div className={\"mb-5\"}>\n                                <a href={user.vk}>\n                                    <Link className={\"contact-type\"}>\n                                        VK\n                                    </Link>\n                                </a>\n                            </div>\n                            <div className={\"mb-5\"}>\n                                <a href={user.github}>\n                                    <Link className={\"contact-type\"}>\n                                        GitHub\n                                    </Link>\n                                </a>\n                            </div>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col span={24}>\n                            <div style={{marginBottom: \"100px\"}} dangerouslySetInnerHTML={{ __html: user.content }}></div>\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n        </div>\n    );\n}\n\nexport default AboutPage;","import React from 'react';\nimport { Route, Redirect, Switch } from 'react-router-dom';\nimport LoginPage from './pages/login/LoginPage';\nimport RegisterPage from \"./pages/register/RegisterPage\";\nimport EditPage from \"./pages/edit/EditPage\";\nimport AboutPage from \"./pages/about/AboutPage\";\nimport { routes } from '../utils/constants';\n\nfunction App() {\n  return (\n      <div className=\"App\">\n        <Switch>\n            <Route path={routes.SIGNIN} component={LoginPage} />\n            <Route path={routes.SIGNUP} component={RegisterPage} />\n            <Route path={routes.EDIT} component={EditPage} />\n            <Route path={routes.ABOUT} component={AboutPage} />\n            <Route path=\"/\" render={props => <Redirect to={routes.SIGNIN} />} />\n        </Switch>\n      </div>\n  );\n}\n\nexport default App;","import types from './types';\n\nconst initialState = {\n\n};\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        // case types.LOGIN_REQUEST:\n        //     return {\n        //         ...state,\n        //     };\n\n        default:\n            return state;\n    }\n}\n","import types from './types';\n\nconst initialState = {\n    user: {}\n};\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case types.GET_USER_SUCCESS:\n            return {\n                ...state,\n                user: action.payload\n            };\n\n        default:\n            return state;\n    }\n}\n","import axios from 'axios';\n\nexport const api = axios.create({\n    baseURL: process.env.REACT_APP_API_URL,\n});\n\nexport const apiSetToken = token => api.defaults.headers.common['Authorization'] = token;\n","import { call, all, takeLatest, put, delay } from 'redux-saga/effects';\nimport types from './types';\nimport { push } from 'connected-react-router';\nimport {createRoute, routes} from \"../../utils/constants\";\nimport { api, apiSetToken} from \"../../utils/api\";\n\nfunction* loginSaga(action) {\n    const { values, actions, res } = action;\n    const req = () => api.post('auth/login', values);\n    try {\n        yield delay(1000);\n        const response = yield call(req);\n        apiSetToken(response.data.token);\n        yield put(push(createRoute.EDIT(response.data.userId)))\n    } catch (e) {\n        actions.setErrors({\n            common: \"Неверный логин или пароль\"\n        });\n    }\n    res();\n}\n\nfunction* registerSaga(action) {\n    const { values, actions, res } = action;\n    const req = () => api.post('auth/register', values);\n    try {\n        yield delay(1000);\n        const response = yield call(req);\n        yield put(push(routes.SIGNIN));\n    } catch (e) {\n        actions.setErrors({\n            common: e.response.data.message\n        });\n    }\n    res();\n}\n\nfunction* logoutSaga(){\n    localStorage.setItem(\"token\", \"\");\n    yield put(push(routes.SIGNIN));\n}\n\nexport default function*() {\n    yield all([\n        // call(autoLogin),\n        takeLatest(types.LOGIN_REQUEST, loginSaga),\n        takeLatest(types.REGISTER_REQUEST, registerSaga),\n        takeLatest(types.LOGOUT_REQUEST, logoutSaga)\n    ]);\n}","import { call, all, takeLatest, put, delay } from 'redux-saga/effects';\nimport types from './types';\nimport { push } from 'connected-react-router';\nimport userActions from './actions';\nimport {createRoute, routes} from \"../../utils/constants\";\nimport { api } from \"../../utils/api\";\n\nfunction* getUserSaga(action) {\n    const req = () => api.post('info/get', {\n        userId: action.userId\n    });\n    console.log(action.userId);\n    try {\n        const response = yield call(req);\n        yield put(userActions.getUserSuccess(response.data));\n    } catch (e) {\n        alert(\"error get user data\");\n        console.log('error', e);\n    }\n}\n\nfunction* updateUserSaga(action) {\n    const { values, actions, res } = action;\n    const req = () => api.post('info/update', values);\n    try {\n        yield delay(1000);\n        const response = yield call(req);\n        alert(\"Данные обнавлены\");\n    } catch (e) {\n        alert(\"Ошибка обновления\");\n        console.log('error', e);\n    }\n    res();\n}\n\nexport default function*() {\n    yield all([\n        takeLatest(types.GET_USER_REQUEST, getUserSaga),\n        takeLatest(types.UPDATE_USER_REQUEST, updateUserSaga),\n    ]);\n}","import { call, all } from 'redux-saga/effects';\nimport loginSagas from '../login/sagas';\nimport userSagas from '../user/sagas';\n\nexport default function*() {\n    yield all([call(loginSagas), call(userSagas)]);\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport { createBrowserHistory } from 'history';\nimport { routerMiddleware } from 'connected-react-router';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer from './root-reducer';\nimport rootSaga from './root-saga';\n\nconst initialState = {};\n\nexport const history = createBrowserHistory();\n\nconst browserRouterMiddleware = routerMiddleware(history);\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middleware = [browserRouterMiddleware, sagaMiddleware];\n\nconst store = createStore(\n    rootReducer(history),\n    initialState,\n    composeWithDevTools(applyMiddleware(...middleware)),\n);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import { combineReducers } from 'redux';\nimport { reducer as form } from 'redux-form';\nimport { connectRouter } from 'connected-react-router'\nimport loginReducer from '../login/reducer';\nimport userReducer from '../user/reducer';\n\nexport default (history) => combineReducers({\n    login: loginReducer,\n    user: userReducer,\n    form,\n    router: connectRouter(history),\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router'\nimport App from './components/App';\nimport store from './ducks/store';\nimport {history} from \"./ducks/store\";\nimport './index.css';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <ConnectedRouter history={history}>\n                <App />\n            </ConnectedRouter>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}